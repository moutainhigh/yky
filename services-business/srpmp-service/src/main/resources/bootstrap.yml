server:
  port: 8401
spring:
  application:
    name: service-srpmp
  cloud:
    config:
      fail-fast: true
      discovery:
        enabled: true
        service-id: config-server
      name: config
      profile: common,srpmp
    bus:
      trace:
        enabled: true
      enabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_ZONE_HOST:localhost}:${EUREKA_ZONE_PORT:8101}/eureka/
feign:
  hystrix:
    enabled: true

word:
  export:
    path: word/export

#security:
#  oauth2:
#    client:
#      client-id: demoApp # 授权服务器配置的client id
#      client-secret: demoAppSecret # 授权服务器配置的client secret
#      scope: all
#      access-token-uri: ${auth-server}/oauth/token # 获取access token接口
#      user-authorization-uri: ${auth-server}/oauth/authorize #  获取Authorization Code接口
#      pre-established-redirect-uri: http://sso.server.com:8209
#      use-current-uri: false #设置false会往http://sso.client.com:8401/login跳 #此处特别重要一定要配置，否则不会生效，配置了自定义的回调地址就必须将默认的回调禁止，原因不做过多说明
#    resource:
#      filter-order: 3
#      token-info-uri: ${auth-server}/oauth/check_token # 验证token的接口
      #      user-info-uri: ${auth-server}/user # 一个可以获取认证授权的自定义接口，可以在授权服务器，也可以在其他服务器上
      #      prefer-token-info: true # 如果同时配置了token-info-uri 和 user-info-uri，这个现象设置使用哪个取验证授权

#security:
#  oauth2:
##    sso:
##      loginPath: /login   # 登录路径
#    client:
#      clientId: demoApp
#      clientSecret: demoAppSecret
#      userAuthorizationUri: http://sso.server.com:8209/oauth/authorize
#      access-token-uri: http://sso.server.com:8209/oauth/token
#    resource:
#      filter-order: 3
#      userInfoUri: http://sso.server.com:8209/oauth/user




#
#cas:
#  server-url-prefix: http://124.17.100.180:9080/isump
#  server-login-url: http://124.17.100.180:9080/isump/login
#  client-host-url: http://localhost:8401
#  validation-type: CAS3